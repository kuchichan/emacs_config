#+STARTIP: overview

* Interface Tweaks
#+BEGIN_SRC emacs-lisp 
(setq inhibit-startup-message t)
(tool-bar-mode -1)
(fset 'yes-or-no-p 'y-or-n-p)
(global-linum-mode t)
#+END_SRC
* Try Package
#+BEGIN_SRC emacs-lisp
(use-package try
  :ensure t)
#+END_SRC
* Which-key Package
Help for noobs like me
#+BEGIN_SRC emacs-lisp
(use-package which-key
  :ensure t
  :config (which-key-mode))
#+END_SRC
* Org-bullets
#+BEGIN_SRC emacs-lisp
(use-package org-bullets
  :ensure t
  :config (add-hook 'org-mode-hook (lambda () (org-bullets-mode 1))))
#+END_SRC
* Windows-package
#+BEGIN_SRC emacs-lisp
(defalias 'list-buffers 'ibuffer-other-window)

(use-package ace-window
  :ensure t
  :init
  (progn
    (global-set-key [remap other-window] 'ace-window)
    (custom-set-faces
     '(aw-leading-char-face
       ((t (:inherit ace-jump-face-foreground :height 3.0)))))
    ))
#+END_SRC
* Navigating & searching
#+BEGIN_SRC emacs-lisp
;; (setq indo-enable-flex-matching)
;; (setq ido-everywhere t)
;; (ido-mode 1)

(use-package counsel
:ensure t
)

(use-package swiper
  :ensure try
  :bind (("C-s" . swiper)
	 ("C-r" . swiper)
	 ("C-c C-r" . ivy-resume)
	 ("M-x" . counsel-M-x)
	 ("C-x C-f" . counsel-find-file))
  :config
  (progn
    (ivy-mode 1)
    (setq ivy-use-virtual-buffers t)
    (setq ivy-display-style 'fancy)
    (define-key read-expression-map (kbd "C-r") 'counsel-expression-history)
    )
  )
#+END_SRC
* Auto-complete
#+BEGIN_SRC emacs-lisp
(use-package auto-complete
  :ensure t
  :init
  (progn
    (ac-config-default)
    (global-auto-complete-mode t)
    ))
#+END_SRC

* Theme
#+BEGIN_SRC emacs-lisp
(use-package spacemacs-common
 :ensure spacemacs-theme
 :init (load-theme 'spacemacs-dark t))
#+END_SRC
* Python Development
#+BEGIN_SRC emacs-lisp
(use-package flycheck
  :ensure t
  :init (global-flycheck-mode 1))
(use-package elpy
  :ensure t
  :config 
  (elpy-enable))
#+END_SRC
* Magit
#+BEGIN_SRC emacs-lisp
(use-package magit
  :ensure t)
#+END_SRC 
